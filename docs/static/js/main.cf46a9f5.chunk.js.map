{"version":3,"sources":["componenetes/AddCategory.js","helpers/getGifs.js","componenetes/GifGridItem.js","componenetes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,MAjCf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAiBlC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EAAM,0CAA0CC,UAAUH,GAAU,qDADxD,SAGAI,MAAMF,GAHN,cAGZG,EAHY,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATzB,kBAYXM,GAZW,4CAAH,sDCDNO,EAAc,SAAC,GAAoB,IAAnBb,EAAkB,EAAlBA,IAAOU,GAAW,EAAdD,GAAc,EAAXC,OAEhC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAU,IAH0B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACRxB,EAAOC,GACFwB,MAAK,SAAAC,GACFC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAGV,CAACpB,IACIqB,EDhBqBM,CAAa3B,GAA/Ba,EAD2B,EAChCN,KAAYa,EADoB,EACpBA,QASf,OACI,oCACI,wBAAIJ,UAAY,qCAAqChB,GACnDoB,GAAY,uCACZ,yBAAKJ,UAAU,aAGTH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,iBACQA,EADR,CAEIkB,IAAKlB,EAAIC,YErBxBkB,EAAe,WAAM,MAGM3C,mBAAS,CAAC,eAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAQ9B,OACI,oCAEG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEM6C,EAAWrB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAO5B,EACPA,SAAYA,U,MChBpC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.cf46a9f5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({setCategorias}) {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n    //e es un event\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        //props.setCategorias(cats =>[...cats,'Vegeta ssj']);\r\n        if(inputValue.trim().length>2){\r\n            setCategorias(cats =>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>       \r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory\r\n","\r\n\r\n\r\nexport const getGif = async(category) =>{\r\n    const url = 'https://api.giphy.com/v1/gifs/search?q='+encodeURI(category)+'&limit=10&api_key=Z24Gz7JOaFTsByNS3NkrC4TNHrGW5BnZ';\r\n\r\n    const res = await fetch(url);\r\n    const {data}  = await res.json();\r\n    const gifs = data.map( img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n  \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,id,title}) => {\r\n    //console.log(title);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\nconst {data:images,loading} = useFetchGifs(category);   \r\n//  const [Image, setImage] = useState([]);\r\n\r\n//     useEffect(()=>{\r\n//         getGif(category)\r\n//             .then( img =>setImage(img));\r\n//     },[category]);  \r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading &&  <p>Cargando</p>}\r\n         {    <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map((img)=>\r\n                        <GifGridItem \r\n                            {...img}\r\n                            key={img.id} \r\n                        />\r\n                    )\r\n                }\r\n\r\n            </div>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n      data:[],\r\n      loading : true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category)\r\n        .then(imgs =>{\r\n            setTimeout(()=>{\r\n                //console.log(imgs);\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                }); \r\n            },3000);\r\n            \r\n        })\r\n  },[category])\r\n  return state; //{data:[], loading : true}\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './componenetes/AddCategory';\r\nimport { GifGrid } from './componenetes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['DragonBall']);\r\n    /*const handleAdd = () =>{\r\n       // setCategorias([...categorias,'Vegeta']);\r\n        setCategorias(cats =>[...cats,'Vegeta ssj']);\r\n    }*/\r\n    return (\r\n        <>\r\n\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategorias={setCategorias}/>\r\n           <hr />\r\n           <ol>\r\n             {\r\n                 categorias.map(category => \r\n                    <GifGrid \r\n                        key = {category} \r\n                        category = {category}\r\n                    />\r\n                 )\r\n             }   \r\n            </ol> \r\n        </>\r\n    )\r\n}\r\n//export default GifExpertApp();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n//import App from './App'; ya no existe\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n\n"],"sourceRoot":""}